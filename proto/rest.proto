syntax = "proto3";

package backend;

service Restrequest {
    rpc ReSrList (ViewRequest) returns (ReSrListResponse);
    rpc ReSrView (NameRequest) returns (ResourceServerPrt);
    rpc ReSrCreate (ResourceServerPrt) returns (ResourceServerPrt);
    rpc ReSrEdit (ResourceServerPrt) returns (ResourceServerPrt);
    rpc ReSrDelete (NameRequest) returns (ResponseStatus);

    rpc IdpList (ViewRequest) returns (IdpListResponse);
    rpc IdpView (NameRequest) returns (IdpPartnerPrt);
    rpc IdpCreate (IdpPartnerPrt) returns (IdpPartnerPrt);
    rpc IdpEdit (IdpPartnerPrt) returns (IdpPartnerPrt);
    rpc IdpDelete (NameRequest) returns (ResponseStatus); 

    rpc SpList (ViewRequest) returns (SPListResponse);
    rpc SpView (NameRequest) returns (SpPartnerPrt);
    rpc SpCreate (SpPartnerPrt) returns (SpPartnerPrt);
    rpc SpEdit (SpPartnerPrt) returns (SpPartnerPrt);
    rpc SpDelete (NameRequest) returns (ResponseStatus);
 
    rpc OidcList (ViewRequest) returns (OidcListResponse);
    rpc OidcView (NameRequest) returns (OidcClientPrt);
    rpc OidcCreate (OidcClientPrt) returns (OidcClientPrt);
    rpc OidcEdit (OidcClientPrt) returns (OidcClientPrt);
    rpc OidcDelete (NameRequest) returns (ResponseStatus);
}

 
message  ResponseStatus {
  string status = 1;
  string message = 2;
}

 enum nameIDformat {
  Emailaddress = 0;
  Unspecified = 1;
}
  
message ReSrListResponse {
  repeated ResourceServerPrt ResourceServer = 1;
}

 message IdpListResponse {
  repeated IdpPartnerPrt IdpPartnerList = 1;
}

message SPListResponse {
  repeated SpPartnerPrt SpPartnerList = 1;

}

message IdpPartnerPrt {
   optional bytes metadataB64 = 1;
   optional string metadataURL = 2;
   optional string partnerType = 3;
   optional string tenantName = 4;
   optional string tenantURL = 5;
   optional string partnerName = 6;
   optional string nameIDFormat = 7;
   optional string ssoProfile = 8;
   optional string attributeLDAP = 9;
   optional string attributeSAML = 10;
   optional string faWelcomePage = 11;
   optional string generateNewKeys = 12;
   optional string validityNewKeys = 13;
   optional bool preverify = 14;
   optional string providerID = 15;
   optional string ssoURL = 16;
   optional string ssoSOAPURL = 17;
   optional string logoutRequestURL = 18;
   optional string logoutResponseURL = 19;
   optional string assertionConsumerURL = 20;
   optional string succinctID = 21;
   optional string signingCert = 22;
   optional string encryptionCert = 23;
   optional string signatureDigestAlgorithm = 24;
   optional string signingKeystoreAccessTemplateId = 25;
   optional string encryptionKeystoreAccessTemplateId = 26;
   optional string adminFedInstanceType = 27;
}

message SpPartnerPrt {
   bytes metadataB64 = 1;
   string metadataURL = 2;
   string partnerType = 3;
   string tenantName = 4;
   string tenantURL = 5;
   string partnerName = 6;
   string nameIDFormat = 7;
   string ssoProfile = 8;
   string generateNewKeys = 9;
   string validityNewKeys = 10;
   string preverify = 11;
   string providerID = 12;
   string ssoURL = 13;
   string ssoSOAPURL = 14;
   string logoutRequestURL = 15;
   string logoutResponseURL = 16;
   string assertionConsumerURL = 17;
   string signingCert = 18;
   string encryptionCert = 19;
   string lastNameAttrName = 20;
   string firstNameAttrName = 21;
   string userNameAttrName = 22;
   string emailAttrName = 23;
   string staticAttrName = 24;
   string staticAttrValue = 25;
   string customAttrsStr = 26;
   string signatureDigestAlgorithm = 27;
   string signingKeystoreAccessTemplateId = 28;
   string encryptionKeystoreAccessTemplateId = 29;
   string adminFedInstanceType = 30;
}
 
message ViewRequest {
  bool list = 1;
  string name = 2;    
}

message NameRequest {
  string name = 1;    
}

message RestResponse {
    string confirmation = 1;
}

message OidcListResponse {
  repeated OidcClientPrt OidcClients = 1;
} 

message VotingResponse {
    string confirmation = 1;
}

message redirectURIs { 
  string url = 1;
  bool isHttps = 2;
}

message attributes {
  string attrName = 1;
  string attrValue = 2;
  string attrType = 3;
}
 
message OidcClientPrt {
   string name = 1;
    string description = 2;
   string idDomain = 3;
   string identity_domain = 4;
   string id = 5;
   string secret = 6;
   string clientType = 7;
   repeated string grantTypes = 8;
   repeated string scopes = 9;
   string usePKCE = 10;
   string defaultScope = 11;
   repeated redirectURIs redirectURIs = 12;
   repeated attributes attributes = 13;
   string tokenEndpointAuthMethod = 14;
   bool issueTLSClientCertificateBoundAccessTokens = 15;
   string tlsClientAuthSubjectDN = 16;
   string tlsClientAuthSANDNS = 17;
   string tlsClientAuthSANURI = 18;
   string tlsClientAuthSANIP = 19;
   string tlsClientAuthSANEmail = 20;
   repeated string accessTokenCustomClaims = 21;
   repeated string idTokenCustomClaims = 22;
   repeated string userInfoCustomClaims = 23;
   int32 oldSecretRetentionTimeInDays = 24;
}

message scope {
  string scope_name = 1;
  string scope_description = 2;
}
 
message ResourceServerPrt {
   string name = 1;
   string description = 2;
   string idDomain = 3;
   repeated scope scopes = 4;
   repeated attributes tokenAttributes = 5;
}